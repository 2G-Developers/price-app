[{"E:\\Work\\Developments\\Frontend\\price-app\\src\\index.js":"1","E:\\Work\\Developments\\Frontend\\price-app\\src\\App.js":"2","E:\\Work\\Developments\\Frontend\\price-app\\src\\pages\\Home\\HomePage.jsx":"3","E:\\Work\\Developments\\Frontend\\price-app\\src\\components\\Statement\\Statement.js":"4","E:\\Work\\Developments\\Frontend\\price-app\\src\\components\\Navbar\\Navbar.jsx":"5","E:\\Work\\Developments\\Frontend\\price-app\\src\\components\\Navbar\\NavbarMobile.jsx":"6","E:\\Work\\Developments\\Frontend\\price-app\\src\\pages\\LoginPage.js":"7"},{"size":224,"mtime":1608394216466,"results":"8","hashOfConfig":"9"},{"size":535,"mtime":1608484862771,"results":"10","hashOfConfig":"9"},{"size":177,"mtime":1608484766491,"results":"11","hashOfConfig":"9"},{"size":6215,"mtime":1608412764413,"results":"12","hashOfConfig":"9"},{"size":2006,"mtime":1608485360916,"results":"13","hashOfConfig":"9"},{"size":2107,"mtime":1608483832032,"results":"14","hashOfConfig":"9"},{"size":862,"mtime":1608485250877,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10f7t00",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Work\\Developments\\Frontend\\price-app\\src\\index.js",[],["32","33"],"E:\\Work\\Developments\\Frontend\\price-app\\src\\App.js",[],"E:\\Work\\Developments\\Frontend\\price-app\\src\\pages\\Home\\HomePage.jsx",[],"E:\\Work\\Developments\\Frontend\\price-app\\src\\components\\Statement\\Statement.js",["34","35"],"import { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport React, { useState } from 'react'\r\nimport 'ag-grid-enterprise';\r\n\r\nexport const Statement = () => {\r\n    const [gridApi, setGridApi] = useState(null);\r\n    const [gridColumnApi, setGridColumnApi] = useState(null);\r\n    const [rowData, setRowData] = useState(null);\r\n\r\n    const data = [\r\n        {\r\n            \"date\": \"11/30/2020\",\r\n            \"expiry_date\": \"-\",\r\n            \"service\": \"Website Development\",\r\n            \"owner\": \"Karthick\",\r\n            \"project\": \"Bump Up\",\r\n            \"estimation\": 5000,\r\n            \"paid\": 1000,\r\n            \"status\": \"Work in Progress\",\r\n            \"spent\": 0,\r\n            \"pending\": 4000,\r\n            \"profit\": 1000,\r\n            \"days\": 2872421\r\n        },\r\n        {\r\n            \"date\": \"11/30/2020\",\r\n            \"expiry_date\": \"-\",\r\n            \"service\": \"Website Development\",\r\n            \"owner\": \"GoSocio\",\r\n            \"project\": \"The Hair Expert\",\r\n            \"estimation\": 2000,\r\n            \"paid\": 2000,\r\n            \"status\": \"Completed\",\r\n            \"spent\": 0,\r\n            \"pending\": 0,\r\n            \"profit\": 2000,\r\n            \"days\": 2872421\r\n        },\r\n        {\r\n            \"date\": \"11/30/2020\",\r\n            \"expiry_date\": \"11/30/2021\",\r\n            \"service\": \"Website Maintainance\",\r\n            \"owner\": \"GoSocio\",\r\n            \"project\": \"The Hair Expert\",\r\n            \"estimation\": 5000,\r\n            \"paid\": 5000,\r\n            \"status\": \"No Changes\",\r\n            \"spent\": 0,\r\n            \"pending\": 0,\r\n            \"profit\": 5000,\r\n            \"days\": 341\r\n        },\r\n        {\r\n            \"date\": \"11/30/2020\",\r\n            \"expiry_date\": \"1/18/2021\",\r\n            \"service\": \"SSL\",\r\n            \"owner\": \"GoSocio\",\r\n            \"project\": \"The Hair Expert\",\r\n            \"estimation\": 2000,\r\n            \"paid\": 2000,\r\n            \"status\": \"Completed\",\r\n            \"spent\": 0,\r\n            \"pending\": 0,\r\n            \"profit\": 2000,\r\n            \"days\": 29\r\n        },\r\n        {\r\n            \"date\": \"11/30/2020\",\r\n            \"expiry_date\": \"-\",\r\n            \"service\": \"Website Development\",\r\n            \"owner\": \"GoSocio\",\r\n            \"project\": \"GoSocio\",\r\n            \"estimation\": 3000,\r\n            \"paid\": 3000,\r\n            \"status\": \"Completed\",\r\n            \"spent\": 0,\r\n            \"pending\": 0,\r\n            \"profit\": 3000,\r\n            \"days\": 2872421\r\n        }\r\n    ]\r\n\r\n    const onGridReady = (params) => {\r\n        setGridApi(params.api)\r\n        setGridColumnApi(params.columnApi)\r\n\r\n        setRowData(data)\r\n    }\r\n\r\n    return (\r\n        <section className=\"statement\" id=\"statement\">\r\n            <div className=\"ag-theme-alpine statement__table\">\r\n                <AgGridReact \r\n                    defaultColDef={{width: 170, sortable: true, editable: true, resizable: true}}\r\n                    onGridReady={onGridReady}\r\n                    // domLayout=\"autoHeight\"\r\n                    rowData={rowData}\r\n                >\r\n                    <AgGridColumn field=\"date\" comparator={dateComparator} />\r\n                    <AgGridColumn \r\n                        field=\"expiry_date\" \r\n                        headerName=\"Expiry Date\"\r\n                        comparator={dateComparator}\r\n                    />\r\n                    <AgGridColumn \r\n                        field=\"service\" \r\n                        cellEditor=\"agRichSelectCellEditor\"\r\n                        cellEditorParams={{ values: ['Website Development','Website Maintainance', 'SSL', 'Mobile App Development'] }}\r\n                    />\r\n                    <AgGridColumn field=\"owner\" />\r\n                    <AgGridColumn field=\"project\" />\r\n                    <AgGridColumn field=\"estimation\" />\r\n                    <AgGridColumn field=\"paid\" />\r\n                    <AgGridColumn \r\n                        field=\"status\" \r\n                        cellEditor=\"agRichSelectCellEditor\"\r\n                        cellEditorParams={{ values: ['Pending','Work in Progress', 'No Changes', 'Completed'] }}\r\n                    />\r\n                    <AgGridColumn field=\"spent\" />\r\n                    <AgGridColumn \r\n                        field=\"pending\"\r\n                        valueGetter={pendingValueGetter} \r\n                    />\r\n                    <AgGridColumn \r\n                        field=\"profit\" \r\n                        valueGetter={profitValueGetter}\r\n                    />\r\n                    <AgGridColumn \r\n                        field=\"days\" \r\n                        valueGetter={daysValueGetter} \r\n                        cellStyle={cellStyle}\r\n                    />\r\n                </AgGridReact>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst cellStyle = (params) => {\r\n    if(params.value < 30) {\r\n        return {color: \"#fff\", backgroundColor: \"#cc0000\"}\r\n    }\r\n    return null;\r\n  }\r\n\r\nconst pendingValueGetter = (params) => {\r\n    return params.data.estimation - params.data.paid;\r\n}\r\n\r\nconst profitValueGetter = (params) => {\r\n    return params.data.paid - params.data.spent;\r\n}\r\n\r\nconst daysValueGetter = (params) => {\r\n    const expiryDate = new Date(params.data.expiry_date);\r\n    if(params.data.expiry_date === \"-\") return \"-\";\r\n    const todaysDate = new Date()\r\n    const diffDate = expiryDate.getTime() - todaysDate.getTime();\r\n    const noOfDays = Math.round(Math.abs(diffDate / (24 * 60 * 60 * 1000)))\r\n    return noOfDays;\r\n}\r\n\r\nfunction dateComparator(date1, date2) {\r\n    var date1Number = monthToComparableNumber(date1);\r\n    var date2Number = monthToComparableNumber(date2);\r\n    if (date1Number === null && date2Number === null) {\r\n      return 0;\r\n    }\r\n    if (date1Number === null) {\r\n      return -1;\r\n    }\r\n    if (date2Number === null) {\r\n      return 1;\r\n    }\r\n    return date1Number - date2Number;\r\n}\r\nfunction monthToComparableNumber(date) {\r\n    if (date === undefined || date === null || date.length !== 10) {\r\n        return null;\r\n    }\r\n    var yearNumber = date.substring(6, 10);\r\n    var monthNumber = date.substring(3, 5);\r\n    var dayNumber = date.substring(0, 2);\r\n    var result = yearNumber * 10000 + monthNumber * 100 + dayNumber;\r\n    return result;\r\n}","E:\\Work\\Developments\\Frontend\\price-app\\src\\components\\Navbar\\Navbar.jsx",[],"E:\\Work\\Developments\\Frontend\\price-app\\src\\components\\Navbar\\NavbarMobile.jsx",[],"E:\\Work\\Developments\\Frontend\\price-app\\src\\pages\\LoginPage.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":6,"column":12,"nodeType":"42","messageId":"43","endLine":6,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":7,"column":12,"nodeType":"42","messageId":"43","endLine":7,"endColumn":25},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'gridApi' is assigned a value but never used.","Identifier","unusedVar","'gridColumnApi' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]